<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


<!--    基于注解的方式配置-->
    <context:annotation-config></context:annotation-config>
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <!--    扫描哪些包-->
    <context:component-scan base-package="com.aistar"></context:component-scan>


    <!--    1.加载数据源文件-->
    <context:property-placeholder location="config/dbconn.properties"></context:property-placeholder>

    <!--   2.注入dateSource-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driver}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 3.JdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--    注入日志类-->
<!--    <bean id="log" class="com.aistar.util.LogUtil"></bean>-->
<!--    <aop:config>-->
<!--        <aop:aspect id="myAspect" ref="log">-->
<!--            <aop:pointcut id="pc" expression="execution(* com.aistar.service.ProductService.add*(..))-->
<!--            ||execution(* com.aistar.service.ProductService.update*(..))-->
<!--            ||execution(* com.aistar.service.ProductService.delete()*(..))"/>-->
<!--            <aop:after method="addLog" pointcut-ref="pc"></aop:after>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

<!--    ================================事务管理================================-->

<!--    1.注入事务对象-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

<!--    2.AOP横切事务到 service.save , update , delete中
           切面 aspect
           切点 pointcut
           增强实现 advice
-->
    <aop:config>
        <aop:pointcut id="pc" expression="execution(* com.aistar.service..*.*(..))"/>
        <aop:advisor advice-ref="tx_advice" pointcut-ref="pc"></aop:advisor>
    </aop:config>
<!--    3.定义增强实现（定义了事务的属性-传播行为） tx:Transaction XML-->
    <tx:advice id="tx_advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>

</beans>